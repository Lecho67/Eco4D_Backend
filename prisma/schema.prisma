// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Usuario {
  identificacion        Int      @id
  tipoIdentificacion    String
  nombre_completo       String
  correo_electronico    String   @unique
  contrasena            String
  rol                   String   @db.Char(1) @default("P") // P=Paciente, M=Médico, A=Administrador
  pais                  String
  ciudad                String
  fecha_nacimiento       DateTime @db.Date 
  // Relaciones para solicitudes de soporte
  solicitudesRealizadas SolicitudSoporte[] @relation("Solicita")
  // Relaciones para diagnósticos - solo una será usada según el rol
  diagnosticosComoMedico    Diagnostico[] @relation("DiagnosticoMedico")
  diagnosticosComoPaciente  Diagnostico[] @relation("DiagnosticoPaciente") 
  // Relaciones para mensajes
  mensajesEnviados     Mensaje[]    @relation("EnviaMensaje")
  refreshToken         RefreshToken?   
  url_foto_de_perfil   String?    
}

model Diagnostico {
  id               Int       @id @default(autoincrement())
  shareLink        String?   @db.VarChar(255)
  enlaceFoto       String    @db.VarChar(255)
  fecha            DateTime  @default(now())
  calificacion     Int?
  enlaceVideo      String    @db.VarChar(255)
  descripcion      String    @db.Text
  edadGestacional  Int    
  // Relaciones
  medico           Usuario   @relation("DiagnosticoMedico", fields: [medicoId], references: [identificacion])
  medicoId         Int
  paciente         Usuario   @relation("DiagnosticoPaciente", fields: [pacienteId], references: [identificacion])
  pacienteId       Int

  @@index([medicoId])
  @@index([pacienteId])
}

model SolicitudSoporte {
  id            Int       @id @default(autoincrement())
  titulo        String    @db.VarChar(100)
  fechaReporte  DateTime  @default(now())
  fechaSolucion DateTime?
  tipo          String    @db.VarChar(255)  // T=Técnico, F=Funcional, O=Otro
  descripcion   String    @db.Text
  estado        String    @default("A") // A=abierta, R=resuelta
  // Relaciones
  solicitante   Usuario   @relation("Solicita", fields: [solicitanteId], references: [identificacion])
  solicitanteId Int
  mensajes      Mensaje[]

  @@index([solicitanteId])
}

model Mensaje {
  id                Int              @id @default(autoincrement())
  descripcion       String           @db.Text
  fecha             DateTime         @default(now())
  // Relaciones
  solicitudSoporte  SolicitudSoporte @relation(fields: [solicitudId], references: [id])
  solicitudId       Int
  autor             Usuario          @relation("EnviaMensaje", fields: [autorId], references: [identificacion])
  autorId           Int

  @@index([solicitudId])
  @@index([autorId])
}

model RefreshToken{
  id                    Int            @id @default(autoincrement())
  fechaExpiracion       DateTime   
  userId                Int            @unique
  usuario               Usuario        @relation(fields: [userId], references: [identificacion])              
}